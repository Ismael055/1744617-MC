#Algoritmo de arreglos aleatorios 
import random 
for w in range (1,30):
	arrw=random.sample(range(1,100),10)
	print(arrw)

#bubbles
valor=0

def bubble(arr):
	aux=arr[:]
	global valor 
	for i in range(len(arr)):
		for j in range(0,len(arr)-i-1):
			if(aux[j]>aux[j+1]):
				aux[j],aux[j+1]=aux[j+1],aux[j]
				valor+=1
	return aux

import random 
p= random.sample(range(0,200),100)
print(p)
psorted=bubble(p)
print(valor)
print(psorted)

#inserction
cnt=0
def orden_por_inserccion(array):
	global cnt
	for indice in range (1, len(array)):  
		valor=array[indice]  #valor es el elemento que vamos a comparar
		i=indice-1                #i es el valor anterior al elemento que estamos comparando 
		while i>=0:    
			cnt+=1          
			if valor<array[i]:     #comparamos valor con el elemento anterior 
				array[i+1]=array[i]
				array[i]=valor
				i-=1
			else: 
				break
		return array

#selection 
def selection (arr):
	for i in range (0,len(arr)-1):
		val=i
		for j in range(i+1, len(arr)):
			if arr[j]<arr[val]:
				val=j
		if val !=1:
			aux=arr[i]
			arr[i]=arr[val]
			arr[val]=aux
	return arr


#Quicksort
import random
cnt=0

def quicksort(arr):
	global cnt
	if len(arr) <= 1:
		return arr
	p=arr.pop(0)
	menores,mayores=[ ],[ ]
	for e in arr:
		cnt+=1
		if e<=p:
			menores.append(e)
		else:
			mayores.append(e)
	return quicksort(menores)+[p]+quicksort(mayores)